{"version":3,"sources":["../../app-es6/helpers/dateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","map","item","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;AAED;;;;;kDACqBC,I,EAAM;AACvB;AACA,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACH;;;kDAEoBC,K,EAAO;AACxB,4BAAG,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAJ,EACC,MAAM,IAAIL,KAAJ,CAAU,yCAAV,CAAN;AACA;AACD,kEAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ;AACnB;AACA;AAFmB,yBAGlBC,GAHkB,CAGd,UAACC,IAAD,EAAOC,CAAP;AAAA,mCAAaD,OAAOC,IAAI,CAAxB;AAAA,yBAHc,CAAnB;AAIH","file":"dateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor() {\r\n        throw new Error('Esta classe não pode ser instanciada');\r\n    }\r\n\r\n    //Métodos estáticos permitem seu reuso direto, sem a necessiade de instanciar classes em outras partes do codigo\r\n    static dataParaTexto(data) {\r\n        //O template string, que são as crases, nos ajudam a usar interpolação, facilitando a montagem de nossa string\r\n        return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`\r\n    }\r\n\r\n    static textoParaData(texto) {\r\n        if(!/\\d{4}-\\d{2}-\\d{2}/.test(texto))\r\n         throw new Error('A data deve estar no formato aaaa-mm-dd');\r\n         //O spread operator é utlizado geralmente para guardar um array dentro de outro existente\r\n        return new Date(...texto.split('-')\r\n        //O map é um modificador de objetos/array, onde ele percorre cada (item) e executa a instrução desejada. É aceito o index, como segundo parametro, para alterações pontuais.\r\n        //Quando há uma unica instrução no bloco, as {} e o return da função são implícitos, sendo opcional o seu uso.\r\n        .map((item, i) => item - i % 2))\r\n    }\r\n\r\n}"]}