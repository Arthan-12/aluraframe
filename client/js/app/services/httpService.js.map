{"version":3,"sources":["../../app-es6/services/httpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","data","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;mDAIcI,G,EAAK;AAAA;;AAEhB,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;oDAEeJ,G,EAAKK,I,EAAM;AAAA;;AAEvB;AACA,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAe,kBAAhB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"httpService.js","sourcesContent":["export class HttpService {\r\n\r\n    _handleErrors(res) {\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        return res\r\n    }\r\n\r\n    //Lembre-se, todas as requisições HTTP são feitas por Promises!\r\n    //Lembre-se, nem todos navegadores possuem suporte para Fetch API, é importante possuir um Polyfill para que haja sua compatibilidade \r\n    getNegociacoes(url) {\r\n\r\n        return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n    }\r\n\r\n    postNegociacoes(url, data) {\r\n\r\n        //Uma requisição http do tipo post precisa ser composta de header, method, body com o conteudo parseado pro formato correto, além da tratativa da response\r\n        return fetch(url, {\r\n            headers: {'Content-type':'application/json'},\r\n            method: 'post',\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => this._handleErrors(res));\r\n    }\r\n\r\n}"]}