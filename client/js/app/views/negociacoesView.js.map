{"version":3,"sources":["../../app-es6/views/negociacoesView.js"],"names":["View","DateHelper","currentInstance","NegociacoesView","element","addEventListener","event","target","nodeName","ordenaColuna","textContent","toLowerCase","model","isAscendente","negociacoes","map","n","dataParaTexto","data","quantidade","valor","volume","join","reduce","total"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,gB,UAAAA,I;;AACCC,sB,sBAAAA,U;;AACAC,2B,oCAAAA,e;;;;;;;;;;;;;;;;;;;;;uCAEIC,e;;;AAET,yCAAYC,OAAZ,EAAqB;AAAA;;AAAA,kJACVA,OADU;;AAGjBA,4BAAQC,gBAAR,CAAyB,OAAzB,EAAkC,UAASC,KAAT,EAAgB;;AAE9C,4BAAGA,MAAMC,MAAN,CAAaC,QAAb,IAAyB,IAA5B,EAAkC;AAC9BN,8CAAkBO,YAAlB,CAA+BH,MAAMC,MAAN,CAAaG,WAAb,CAAyBC,WAAzB,EAA/B;AACH;AACJ,qBALD;AAHiB;AASpB;;;;8CAESC,K,EAAO;;AAEb,+GAC4DA,MAAMC,YAAN,KAAuB,YAAvB,GAAsC,aADlG,qUAcMD,MAAME,WAAN,CAAkBC,GAAlB,CAAsB,UAACC,CAAD,EAAM;AAC1B,gGAEcf,WAAWgB,aAAX,CAAyBD,EAAEE,IAA3B,CAFd,2CAGcF,EAAEG,UAHhB,2CAIcH,EAAEI,KAJhB,2CAKcJ,EAAEK,MALhB;AAQA;AACH,yBAVC,EAUCC,IAVD,CAUM,EAVN,CAdN;AA8BQ;AACA;AACAV,8BAAME,WAAN,CAAkBS,MAAlB,CAAyB,UAACC,KAAD,EAAQR,CAAR;AAAA,mCAAcQ,QAAQR,EAAEK,MAAxB;AAAA,yBAAzB,EAAyD,GAAzD,CAhCR;AAqCH;;;;cApDgCrB,I","file":"negociacoesView.js","sourcesContent":["import {View} from './View';\r\nimport { DateHelper } from '../helpers/dateHelper';\r\nimport { currentInstance } from '../controllers/negociacaoController';\r\n\r\nexport class NegociacoesView extends View {\r\n\r\n    constructor(element) {\r\n        super (element);\r\n\r\n        element.addEventListener('click', function(event) {\r\n\r\n            if(event.target.nodeName == 'TH') {\r\n                currentInstance().ordenaColuna(event.target.textContent.toLowerCase());\r\n            }\r\n        })\r\n    }\r\n\r\n    _template(model) {\r\n\r\n        return `\r\n        <h3 id=\"tabela-negociacoes\" class=\"text-center\">Ordenação ${model.isAscendente() ? 'Ascendente' : 'Descendente'} </h3>\r\n\r\n        <table class=\"table table-hover table-bordered\">\r\n        <thead>\r\n            <tr>\r\n                <th>DATA</th>\r\n                <th>QUANTIDADE</th>\r\n                <th>VALOR</th>\r\n                <th>VOLUME</th>    \r\n            </tr>\r\n        </thead>\r\n        \r\n        <tbody>\r\n            ${model.negociacoes.map((n)=> {\r\n                return `\r\n                    <tr>\r\n                        <td>${DateHelper.dataParaTexto(n.data)}</td>\r\n                        <td>${n.quantidade}</td>\r\n                        <td>${n.valor}</td>\r\n                        <td>${n.volume}</td>\r\n                    </tr>\r\n                `\r\n                //O método join junta a template string criada à string da criação de tabela para podermos inserir itens em nosso template.\r\n            }).join('')}\r\n        </tbody>\r\n        \r\n        <tfoot>\r\n            <td colspan=\"3\"></td>\r\n            <td>${\r\n                //Através do métdodo IFFE, autoinvocamos uma função para que possamos utilizálo no template string e possamos capturar seu valor de return\r\n                //É possível tambem utlizar a função reduce, que retorna um unico valor de um array. É opcional retornarmos tambem o valor inicial do reduce\r\n                model.negociacoes.reduce((total, n) => total + n.volume, 0.0)\r\n            }\r\n        </tfoot>\r\n    </table>\r\n        `;\r\n    }\r\n}"]}