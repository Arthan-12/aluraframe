{"version":3,"sources":["../../app-es6/models/listaNegociacoes.js"],"names":["ListaNegociacoes","_negociacoes","_ascendente","negociacao","push","criterio","sort","reverse","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAAaA,gB;AAET,4CAAc;AAAA;;AACV,yBAAKC,YAAL,GAAoB,EAApB;AACA,yBAAKC,WAAL,GAAmB,IAAnB;AACH;;;;uDAEkBC,U,EAAY;AAC3B,6BAAKF,YAAL,CAAkBG,IAAlB,CAAuBD,UAAvB;AACA;AACA;AACH;;;mDAQc;AACX,6BAAKF,YAAL,GAAoB,EAApB;AACH;;;iDAEYI,Q,EAAU;AACnB,6BAAKJ,YAAL,CAAkBK,IAAlB,CAAuBD,QAAvB;AACH;;;mDAEc;AACX,6BAAKH,WAAL,GAAmB,CAAE,KAAKA,WAA1B;AACA,6BAAKD,YAAL,CAAkBM,OAAlB;AACH;;;mDAEc;AACX,+BAAO,KAAKL,WAAZ;AACH;;;wCArBiB;AACd;AACA;AACA,+BAAO,GAAGM,MAAH,CAAU,KAAKP,YAAf,CAAP;AACH","file":"listaNegociacoes.js","sourcesContent":["export class ListaNegociacoes {\r\n\r\n    constructor() {\r\n        this._negociacoes = [];\r\n        this._ascendente = true;\r\n    }\r\n\r\n    adicionaNegociacao(negociacao) {\r\n        this._negociacoes.push(negociacao);\r\n        //A classe reflect aplica o comportamento que queremos, através do método apply, passando os parametros e no array o contexto que queremos\r\n        // Reflect.apply(this._armadilha, this._contexto, [this]);\r\n    }\r\n\r\n    get negociacoes() {\r\n        //Em programação defensiva, o concat() vai gerar uma cópia na nossa lista de negociacoes, para que a original não sofra alterações e interferências externas.\r\n        //O método concat() permite numero infinitos de parametros, seja arrays ou nao.\r\n        return [].concat(this._negociacoes);\r\n    }\r\n\r\n    esvaziaLista() {\r\n        this._negociacoes = [];\r\n    }\r\n\r\n    ordenaColuna(criterio) {\r\n        this._negociacoes.sort(criterio);        \r\n    }\r\n\r\n    inverteOrdem() {\r\n        this._ascendente = ! this._ascendente;\r\n        this._negociacoes.reverse();\r\n    }\r\n\r\n    isAscendente() {\r\n        return this._ascendente;\r\n    }\r\n}"]}